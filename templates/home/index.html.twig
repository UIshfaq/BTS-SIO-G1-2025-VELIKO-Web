{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!{% endblock %}

{% block body %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <style type="text/css">
        #map{ /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height:400px;
        }
    </style>
    <title>Carte</title>

    <body>
    <div id="map">
        <!-- Ici s'affichera la carte -->
    </div>

    <!-- Fichiers Javascript -->
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <script type="text/javascript">
        // On initialise la latitude et la longitude de Paris (centre de la carte)
        var lat = 48.852969;
        var lon = 2.349903;
        var macarte = null;
        // Fonction d'initialisation de la carte
        function initMap() {
            // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
            macarte = L.map('map').setView([lat, lon], 11);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                // Il est toujours bien de laisser le lien vers la source des données
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(macarte);

            //localisation du client
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var lat = position.coords.latitude;
                    var lon = position.coords.longitude;
                    // Centrage position de l'user

                    // Définir la vue de la carte sur la position actuelle de l'utilisateur
                    macarte.setView([lat, lon], 11);

                    // Ajouter un marqueur à la position actuelle de l'utilisateur
                    L.marker([lat, lon]).addTo(macarte);
                }, function(error) {
                    console.log("Erreur lors de la récupération de la position : ", error);
                    // Si une erreur survient, centrer la carte sur une position par défaut
                    macarte.setView([48.852969, 2.349903], 11);
                });
            } else {
                console.log("La géolocalisation n'est pas supportée par ce navigateur.");
                // Si la géolocalisation n'est pas supportée, centrer la carte sur une position par défaut
                macarte.setView([48.852969, 2.349903], 11);
            }
            {% for station1 in response.data.stations %}
            {% set matching_station = response2.data.stations | filter(station => station.station_id == station1.station_id) | first %}
            {% if matching_station is not null %}
            var marker = L.marker([{{ station1.lat }}, {{ station1.lon }}]).addTo(macarte);
            marker.bindPopup('Station: {{ station1.name }}<br>Nombre de vélos restant : {{ matching_station.num_bikes_available }}<br>Nombre de vélo mécanique : {{ matching_station.num_bikes_available_types[0]. mechanical }} <br> Nombre de vélo élétrique : {{ matching_station.num_bikes_available_types[1]. ebike }}');
            {% endif %}
            {% endfor %}
            // Ajouter le groupe de marqueurs à la carte
            macarte.addLayer(markers);


        }
        window.onload = function(){
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();
        };
    </script>
    </body>
{% endblock %}
